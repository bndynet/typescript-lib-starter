name: release

on:
  push:
    branches:
      - master
      - main
      
run-name: release by @${{ github.actor }}

env:
  NODE_VERION: 18.x

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        persist-credentials: false

    - name: Use Node.js ${{ env.NODE_VERION }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERION }}
        registry-url: https://registry.npmjs.org

    - name: Install dependencies
      run: npm ci

    - name: Test and Build
      run: |
        npm run test:prod
        npm run build --if-present

    - name: Check version
      run: npm run semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Inject version
      uses: bndynet/github-action-inject-copyright@v1
      with:
        dist: dist

    - name: Publish to NPM
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Set up registry for GitHub
      uses: actions/setup-node@v3
      with:
        registry-url: https://npm.pkg.github.com/

    - name: Publish to GitHub
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Prepare gh-pages...
      run: |
        npm run build:all
        npm run predeploy-gh-pages

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './docs'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2